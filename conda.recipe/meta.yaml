{% set pyproject = load_file_data('../pyproject.toml', from_recipe_dir=True) %}
{% set version = VERSION %}
{% set project = pyproject['project'] %}

package:
  name: dynamont
  version: {{ version }}

source:
  path: ..

build:  
  number: 0
  script_env:
    - PROJECT_VERSION={{ version }}
  script:
    - mkdir -p build && cd build
    - rm -rf *
    - cmake ${SRC_DIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_BUILD_TYPE=Release -DPROJECT_VERSION="$PROJECT_VERSION" -DCMAKE_EXE_LINKER_FLAGS="-static-libstdc++ -static-libgcc" -DCMAKE_CXX_FLAGS="-D_GLIBCXX_USE_CXX11_ABI=0"
    - make -j${CPU_COUNT}
    - make install
    - cd ..
    - cp -r ${SRC_DIR}/models ${PREFIX}/models
    - cp ${SRC_DIR}/build/bin/dynamont-NT-banded ${PREFIX}/bin
    - cp ${SRC_DIR}/build/bin/dynamont-NTC ${PREFIX}/bin
    - {{ PYTHON }} -m pip install --no-build-isolation --no-deps --ignore-installed -vv $SRC_DIR

requirements:
  build:
    - {{ compiler('cxx') }}  # This ensures the correct C++ compiler is used
    - cmake
    - make
    - gtest # Add GTest to the build requirements
    - pip
    - python
    - sysroot_linux-64  # Ensure compatibility with glibc 2.17
  host:
    - python
    - pip
    {% for dep in pyproject['build-system']['requires'] %}
    - {{ dep.lower() }}
    {% endfor %}
  run:
    - python
    {% for dep in project['dependencies'] %}
    - {{ dep.lower() }}
    {% endfor %}

test:
  source_files:
    - test
  requires:
    {% for dep in project['optional-dependencies']['test'] %}
    - {{ dep.lower() }}
    {% endfor %}
  commands:
    - dynamont-NT-banded --help
    - dynamont-NTC --help
    - dynamont-resquiggle --help
    - dynamont-train --help
    - test_dynamont
    - pytest -vv


about:
  home: {{ project['urls']['repository'] }}
  summary: {{ project['description'] }}
  license: {{ pyproject.get('license') }}
  license_file: LICENSE
  description: |
    {{ project['description'] }}

extra:
  recipe-maintainers:
    - JannesSP